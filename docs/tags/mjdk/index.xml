<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MJDK on 大峰哥</title>
    <link>https://wfsui.github.io/tags/mjdk/</link>
    <description>Recent content in MJDK on 大峰哥</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>© Copyright notice</copyright>
    <lastBuildDate>Sun, 28 Jan 2024 02:39:53 +0000</lastBuildDate>
    <atom:link href="https://wfsui.github.io/tags/mjdk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MJDK 如何实现压缩速率的 5 倍提升？</title>
      <link>https://wfsui.github.io/posts/mjdk-%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%8E%8B%E7%BC%A9%E9%80%9F%E7%8E%87%E7%9A%84-5-%E5%80%8D%E6%8F%90%E5%8D%87/</link>
      <pubDate>Sun, 28 Jan 2024 02:39:53 +0000</pubDate>
      <guid>https://wfsui.github.io/posts/mjdk-%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%8E%8B%E7%BC%A9%E9%80%9F%E7%8E%87%E7%9A%84-5-%E5%80%8D%E6%8F%90%E5%8D%87/</guid>
      <description>1 前言 数据压缩技术[1]因可有效降低数据存储及传输成本，在计算机领域有非常广泛的应用（包括网络传输、文件传输、数据库、操作系统等场景）。主流压缩技术按其原理可划分为无损压缩[2]、有损压缩[3]两类，工作中我们最常用的压缩工具 zip 和 gzip ，压缩函数库 zlib，都是无损压缩技术的应用。Java 应用中对压缩库的使用包括：处理 HTTP 请求时对 body 的压缩/解压缩操作、使用消息队列服务时对大消息体（如&amp;gt;1M）的压缩/解压缩、数据库写入前及读取后对大字段的压缩/解压缩操作等。常见于监控、广告等涉及大数据传输/存储的业务场景。&#xA;美团基础研发平台曾经开发过一种基于 Intel 的 isa-l 库优化的 gzip 压缩工具及 zlib[4] 压缩库（又称：mzlib[5] 库），优化后的压缩速度可提升 10 倍，解压缩速度能提升 2 倍，并已在镜像分发、图片处理等场景长期稳定使用。遗憾的是，受限于 JDK[6] 对压缩库调用的底层设计，公司 Java8 服务一直无法使用优化后的 mzlib 库，也无法享受压缩/解压缩速率提升带来的收益。为了充分发挥 mzlib 的性能优势为业务赋能，在 MJDK 的最新版本中，我们改造并集成了 mzlib 库，完成了JDK中 java.</description>
    </item>
  </channel>
</rss>
