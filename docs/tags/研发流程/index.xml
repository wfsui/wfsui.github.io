<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>研发流程 on 大峰哥</title>
    <link>https://wfsui.github.io/tags/%E7%A0%94%E5%8F%91%E6%B5%81%E7%A8%8B/</link>
    <description>Recent content in 研发流程 on 大峰哥</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>© Copyright notice</copyright>
    <lastBuildDate>Tue, 06 Feb 2024 02:39:56 +0000</lastBuildDate>
    <atom:link href="https://wfsui.github.io/tags/%E7%A0%94%E5%8F%91%E6%B5%81%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>美团到店终端从标准化到数字化的演进之路</title>
      <link>https://wfsui.github.io/posts/%E7%BE%8E%E5%9B%A2%E5%88%B0%E5%BA%97%E7%BB%88%E7%AB%AF%E4%BB%8E%E6%A0%87%E5%87%86%E5%8C%96%E5%88%B0%E6%95%B0%E5%AD%97%E5%8C%96%E7%9A%84%E6%BC%94%E8%BF%9B%E4%B9%8B%E8%B7%AF/</link>
      <pubDate>Tue, 06 Feb 2024 02:39:56 +0000</pubDate>
      <guid>https://wfsui.github.io/posts/%E7%BE%8E%E5%9B%A2%E5%88%B0%E5%BA%97%E7%BB%88%E7%AB%AF%E4%BB%8E%E6%A0%87%E5%87%86%E5%8C%96%E5%88%B0%E6%95%B0%E5%AD%97%E5%8C%96%E7%9A%84%E6%BC%94%E8%BF%9B%E4%B9%8B%E8%B7%AF/</guid>
      <description>1 背景 在我们日常工作中，要实现需求的快速和高质量交付，关键在于提升效率和质量。然而，在实践中很难找到一个通用策略，能同时针对效率和质量进行优化。这是因为在不同的场景下，对效率和质量会产生不同的解读。例如，在需求研发阶段，研发团队可能更注重提升工程效率和代码质量；而测试团队可能会更关注平台的稳定性和需求的质量；产品团队则可能聚焦于缩短交付周期和提高资源的有效使用。&#xA;在深入探讨具体的研发场景时，我们遇到了若干挑战。首先，一个完整的交付流程涵盖了从需求开发到产品上线的各个阶段，涉及产品、研发、测试等关键角色，每个人的职责各有侧重，且整个过程依赖于持续的沟通与协作。在这个环节中，我们常会遇到这样的问题：尽管每个人都忙碌，但整体效率却并没有明显的提升；即便对单一环节进行了优化，但优化效果并没有直接让整个需求的时间缩短，有时甚至会导致资源等待时间变长。&#xA;对于第一个问题，这通常不是个人能力的问题，而是因为我们在产研协同流程或资源管理工具上还有改进的空间。而第二个问题，可以举个例子这样理解：假设一个研发任务预计需要3天完成，一个高效的研发人员可能在1天内就完成了开发工作。然而，在实际的工作流程中，这样的个人优化并不会直接把5天的需求变为3天。因为开发后还需要进行多个步骤，如前/后端联调、需求验收、测试用例编写等，因此个人的单点优化很难对整个项目产生显著的影响。&#xA;因此，面向全流程优化的关键在于采取一个全面的视角，关注整个团队和协作流程的改进。只有当我们从整体出发，全面优化各个团队的工作流程和协同机制，我们才能真正实现缩短交付周期、提高效率和质量的目标。&#xA;产研阶段不同应对的问题不同 在进行分阶段优化时，各个企业在需求、研发和运维这些关键阶段通常都已经拥有一些成熟的解决方案或产品。例如，在需求阶段，企业通常会利用需求管理和排期管理工具；而在研发阶段，则广泛采用各种成熟的CI/CD工具（这个阶段进一步细分为多个子阶段，每个子阶段都有其特定的目标和潜在的提升点）。为了有效地进行优化，首先需要建立一个清晰的流程规范，明确各个阶段的具体任务和目标。随后，将这些明确的规范转化为线上化的操作，通过人力资源的有效配置，以自动化的方式实现效率和质量的双重提升。&#xA;不同业务形态和基础环境面对的问题不同 总结起来，优化方向主要有两个：首先是全面提升产研协同的效率，其次是通过建立标准化、线上化，进而实现自动化的过程进行优化。然而，根据不同公司和业务形态的具体情况，这两方面的具体感受和需求也会有所不同。&#xA;以美团的业务技术形态为例，早期时，技术栈主要是Native和Web独立运营，各个团队“各自为政”，效率和质量的提升很大程度上取决于团队的规范执行情况和个人的编码习惯。因此，这一阶段最主要的痛点在于缺乏统一的标准和最佳实践。&#xA;进入中期，开始逐渐采用动态化技术，一些需求也开始具备跨iOS和Android的能力。发版模式从原先的Native“火车发版”转变为动态发版，产研交付的频次大幅增加，从两周一版变成了一周甚至一天一版。这一变化极大地考验了团队的协同能力和快速发版的能力。因此，这个阶段的挑战在于如何通过工具化的方式有效整合资源，以及如何适应快速变化和发展的节奏。&#xA;目前阶段，美团的业务已全面拥抱动态化，并在多个场景下实现了一码多端的能力。从之前的iOS、Android到现在的多端对齐，研发的差异性和管理成本、质量风险都有所增加。因此，当前阶段的核心问题是如何通过一套统一且通用的自动化方案，来实现整体效率的提升和质量的保障。&#xA;演进策略概览 带着这些挑战，我们来看下技术演进的概览。在初始阶段，我们通过标准化解决缺乏统一标准和最佳实践的问题的策略。进入中期，我们重点实施了工具化和线上化策略，以应对产研协同过程中出现的挑战。当前阶段，我们正专注于利用综合的大前端DevOps方法，旨在统一跨技术栈的流程并显著提升效率。&#xA;2 标准化 什么是标准化？为什么要做标准化？为什么大家都是共同实践出来的经验，A说的就是标准，B说的就不标准？带着这些问题我们这里先展开标准化的建设过程。&#xA;标准化背景 如图中所示，前端标准化实施之前，从业务规范到技术选型，差异显著，且难以判断各种方案的优劣，每个团队均根据自身的经验实施各异的实践。</description>
    </item>
  </channel>
</rss>
